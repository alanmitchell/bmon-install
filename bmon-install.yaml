---
- hosts: localhost

  vars_files:
    - "{{ lookup('env', 'HOME') }}/.bmon/variables.yaml"

  vars:
    ansible_script_dir: "{{ lookup('env', 'HOME') }}/bmon-install"
    venv_dir: "{{ install_dir }}/env"
    venv_python: "{{ venv_dir }}/bin/python"
  tasks:

  - name: Get the username running the installation
    shell: 
      cmd: whoami
    register: username

  - name: Get the IP Address of this server
    shell: 
      cmd: hostname -I | cut -d " " -f 1
    register: server_ip

  - name: Stop Nginx (may not be present yet, so ignore error)
    become: yes
    ansible.builtin.systemd:
      name: nginx
      state: stopped
    ignore_errors: yes

  - name: Stop the BMON socket, as it might be running from previous install.
    become: yes
    ansible.builtin.systemd:
      name: bmon.socket
      state: stopped
    ignore_errors: yes

  - name: Delete Install Directory if Present
    ansible.builtin.file:
      path: "{{ install_dir }}"
      state: absent

  - name: Install system packages
    become: yes
    apt: 
      name:
        - git 
        - python3-pip 
        - python3-dev 
        - nginx 
        - ufw
        - curl 
        - sqlite3
        - pwgen
        - tree
        - unzip
        - certbot 
        - python3-certbot-nginx
      state: latest

  - name: Upgrade pip
    become: yes
    pip:
      name: pip
      extra_args: --upgrade

  - name: Install visidata and virtualenv
    become: yes
    pip:
      name: 
        - visidata
        - virtualenv

  - name: Clone BMON Repository
    git:
      repo: https://github.com/alanmitchell/bmon.git
      dest: "{{ install_dir }}"
      force: no
      version: master

  - name: Install BMON python requirements & create virtualenv
    pip:
      requirements: "{{ install_dir }}/requirements.txt"
      virtualenv: "{{ venv_dir }}"

  - name: Make a BMON Storage Key
    shell:
      cmd: pwgen 12 1
    register: store_key

  - name: Make a Django Secret Key
    shell:
      cmd: pwgen 20 1
    register: django_secret_key

  - name: Make a BMON settings.py file from a template
    ansible.builtin.template:
      src: "{{ install_dir }}/bmon/settings_example.py"
      dest: "{{ install_dir }}/bmon/settings.py"

  - name: Run a number of manage.py commands on the Django app
    shell:
      cmd: "{{ venv_python }} manage.py {{ item }}"
      chdir: "{{ install_dir }}"
    loop:
      - makemigrations
      - migrate
      - collectstatic --noinput
      - loaddata init_data.yaml

  - name: Create the super user
    shell:
      cmd: echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('{{ superuser_name }}', '{{ superuser_email }}', '{{ superuser_password }}')" | {{ venv_python }} manage.py shell
      chdir: "{{ install_dir }}"

  - name: Make sure the main BMON cron job is present.
    ansible.builtin.cron:
      name: Main BMON Cron job
      minute: "*/5"
      job: "cd {{ install_dir }} && {{ venv_python }} manage.py runscript main_cron > /dev/null 2>&1"

  - name: Make systemd service files
    become: yes
    ansible.builtin.template:
      src: "{{ ansible_script_dir }}/bmon.service.j2"
      dest: /etc/systemd/system/bmon.service

  - name: Make socket file
    become: yes
    copy:
      src: "{{ ansible_script_dir }}/bmon.socket"
      dest: /etc/systemd/system/bmon.socket

  - name: Start and Enable the socket
    become: yes
    ansible.builtin.systemd:
      name: bmon.socket
      state: started
      enabled: yes
      daemon_reload: yes

  - name: Make Nginx site file for raw IP address
    become: yes
    ansible.builtin.template:
      src: "{{ ansible_script_dir }}/nginx-bmon-ip.j2"
      dest: /etc/nginx/sites-available/bmon-ip
    when: ip_address_access | bool

  - name: Create a symbolic link to enable site for IP address
    become: yes
    ansible.builtin.file:
      src: /etc/nginx/sites-available/bmon-ip
      dest: /etc/nginx/sites-enabled/bmon-ip
      state: link
    when: ip_address_access | bool

  - name: Remove IP address Nginx file if not requested
    become: yes
    ansible.builtin.file:
      path: /etc/nginx/sites-enabled/bmon-ip
      state: absent
    when: not (ip_address_access | bool)

  - name: Make Nginx site file for domain
    become: yes
    ansible.builtin.template:
      src: "{{ ansible_script_dir }}/nginx-bmon.j2"
      dest: /etc/nginx/sites-available/bmon

  - name: Create a symbolic link to enable site for domain
    become: yes
    ansible.builtin.file:
      src: /etc/nginx/sites-available/bmon
      dest: /etc/nginx/sites-enabled/bmon
      state: link

  - name: Disable default Nginx site
    become: yes
    ansible.builtin.file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: Restart Nginx
    become: yes
    ansible.builtin.systemd:
      name: nginx
      state: restarted

  - name: Make sure SSH is enabled on UFW firewall
    become: yes
    ufw:
      rule: allow
      name: OpenSSH

  - name: Allow Nginx ports in firewall
    become: yes
    ufw:
      state: enabled
      rule: allow
      name: Nginx Full

  - name: Install Let's Encrypt Certificate
    become: yes
    shell:
      cmd: certbot --nginx --noninteractive --agree-tos -m {{ lets_encrypt_email }} --redirect -d {{ bmon_domain }} -d www.{{ bmon_domain }}
    when: install_lets_encrypt | bool

  - name: Include Task list to install AWS CLI.
    include_tasks: awscli.yaml

  - name: Insert bmon profile in AWS config file
    blockinfile:
      path: "{{ lookup('env', 'HOME') }}/.aws/config"
      block: |
        [bmon]
        region = us-west-2
        output = json

  - name: Insert bmon profile in AWS credentials file
    blockinfile:
      path: "{{ lookup('env', 'HOME') }}/.aws/credentials"
      block: |
        [bmon]
        aws_access_key_id = PUT_ACCESS_KEY_HERE
        aws_secret_access_key = PUT_SECRET_KEY_HERE

  - name: Determine location of aws CLI utility
    shell: 
      cmd: which aws
    register: aws_path
  
  - name: Make sure the Django database backup cron job is present but disabled.
    ansible.builtin.cron:
      name: BMON Django Database Backup Cron job
      minute: "18"
      hour: "11,23"
      job: "{{ aws_path.stdout }} s3 sync {{ install_dir }}/bak s3://bmon-backup.analysisnorth.com/{{ bmon_domain }}/django --profile bmon"
      disabled: yes

  - name: Make sure the Sensor Reading database backup cron job is present but disabled.
    ansible.builtin.cron:
      name: BMON Sensor Reading Database Backup Cron job
      minute: "25"
      hour: "11,23"
      job: "{{ aws_path.stdout }} s3 sync {{ install_dir }}/bmsapp/readingdb/data/bak s3://bmon-backup.analysisnorth.com/{{ bmon_domain }}/data --storage-class ONEZONE_IA --profile bmon"
      disabled: yes

  - name: Write a file of installation information.
    ansible.builtin.template:
      src: "{{ ansible_script_dir }}/INSTALLATION-INFO.j2"
      dest: "{{ lookup('env', 'HOME') }}/.bmon/INSTALLATION-INFO.txt"
